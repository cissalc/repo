AngularJS核心功能
数据绑定：自动同步视图和模式组件的数据
作用域：这些对象参考模式。作为控制器和视图的纽带
控制器：这些JS方法绑定到指定的作用域中
服务：AngularJS带有一些内建的服务，例如，$http来处理XMLHttpRequests.　这些都是Singleton对象，只需要实例化一次
过滤器：这些用来处理数组的子集并且返回新的数组
指令集: 指令集是DOM元素的标示（例如，元素，属性，CSS等等）。这些指令集可以用来定义自定义的HTML标签，生成新的自定义的组件。AngularJS定义了一些内建的指令集（ngBind, ngModal等等）
模板：这些组件用来帮助将数据生成页面视图。一个页面可以有一个或者多人模板。
路由: 用来切换不同视图的机制
Model View Whatever：MVC是一个用来将程序分割为不同部分的设计模式，每一个有自己独立的功能。AngularJS实现的并非是传统意义上的MVC架构，而是类似MVVM(Model-View-ViewModel)，AngularJS团队戏称为MVW(Model View Whatever)
深度链接：允许你编码状态到URL中，这样可以方便的收藏地址。程序可以从URL中恢复保存时的状态
依赖注入：AngularJS内建的依赖注入子系统，帮助开发人员更容易的创建开发，测试和理解代码和结构

AngularJS核心结构

AngularJS优势
* 提供了更方便创建简洁可维护单页面应用的方式
* 数据绑定提供了使用者更丰富和响应式的体验
* 支持单元测试
* 支持依赖注入
* 可重用的组件
* 更少代码更丰富功能
* 使用传统的HTML，并且开发javascript来开发生成业务逻辑

AngularJS劣势
* 不是很安全：作为纯JS的框架，AngularJS并不安全。服务器端的验证和授权必须使用保证应用安全
* 如果用户禁用了JS，则只能看到基础页面，功能都无用
